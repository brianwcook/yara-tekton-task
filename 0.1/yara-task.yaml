apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "yara, vius, malware, appstudio, hacbs"
  name: yara-task
spec:
  volumes:
  - emptyDir: {}
    name: work
  description:
    Scans the content of container images for malware using Yara antivirus scanner.
  results:
    - name: TEST_OUTPUT
      description: Tekton task test output.
  params:
    - name: image-digest
      description: Image digest to scan.
    - name: image-url
      description: Image URL.
    - name: docker-auth
      description: unused
      default: ""

  steps:
    - name: extract-and-scan-image
      image: quay.io/bcook/yara-image@sha256:72366df116deef4c4eae847463cf2290d6fce496e466c7fdaa25df736162bad3
      workingDir: /work
      # need to change user since 'oc image extract' requires more privileges when running as root
      # https://bugzilla.redhat.com/show_bug.cgi?id=1969929
      securityContext:
        runAsUser: 0
        capabilities:
          add:
          - SETFCA
      volumeMounts:
      - mountPath: /work
        name: work
      env:
        - name: HOME
          value: /work
        - name: IMAGE_URL
          value: $(params.image-url)
        - name: IMAGE_DIGEST
          value: $(params.image-digest)
      resources:
        limits:
          memory: 4Gi
          cpu: 2
        requests:
          memory: 512Mi
          cpu: 10m
      script: | 
        imagewithouttag=$(echo $IMAGE_URL | sed "s/\(.*\):.*/\1/" | tr -d '\n')
      
        # strip new-line escape symbol from parameter and save it to variable
        imageanddigest=$(echo $imagewithouttag@$IMAGE_DIGEST)

        # check if image is attestation one, skip the yara scan in such case
        if [[ $imageanddigest == *.att ]]
        then
            echo "$imageanddigest is an attestation image. Skipping Yara scan."
            exit 0
        fi
        mkdir content
        cd content
        echo Extracting image.
        if ! /opt/app-root/src/oc image extract $imageanddigest; then
          echo "Unable to extract image. Skipping ClamAV scan!"
          exit 0
        fi
        echo Extraction done.
        
        # echo mounting image
        # podman image mount $IMAGE_URL:9.2
        # this causes a reproducible panic (anytime i try podman image mount running podman in a container.)
        
        # echo extracting image...
        # /opt/app-root/src/oc image extract $IMAGE_URL:9.2 --path /:/work/content
        
        echo Running yara scan.
        # yara [OPTIONS] RULES_FILE TARGET
        # rules file is /opt/app-root/src/
        # echo $(ls)
        /usr/local/bin/yara -r -C /opt/app-root/src/rules.yara /work/content | tee /tekton/home/yara-result.log
        echo done.